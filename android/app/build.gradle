apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react" // This plugin internally reads hermesEnabled, etc. from gradle.properties

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    // These lines are NOT needed here anymore. The 'com.facebook.react' plugin
    // automatically reads 'hermesEnabled', 'newArchEnabled', and 'reactNativeArchitectures'
    // from your project-level or user-level gradle.properties file.

    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    // ... (rest of the react block unchanged) ...
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = io.github.react-native-community:jsc-android-intl:2026004.+`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.timetracker"
    defaultConfig {
        applicationId "com.timetracker"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        // ADD YOUR RELEASE SIGNING CONFIG HERE
        release {
            // Check if the properties are defined in gradle.properties
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(project.property('MYAPP_UPLOAD_STORE_FILE'))
                storePassword project.property('MYAPP_UPLOAD_STORE_PASSWORD')
                keyAlias project.property('MYAPP_UPLOAD_KEY_ALIAS')
                keyPassword project.property('MYAPP_UPLOAD_KEY_PASSWORD')
            } else {
                // This warning will appear if you haven't configured your signing keys correctly in ~/.gradle/gradle.properties
                println "WARNING: Release signing properties (MYAPP_UPLOAD_STORE_FILE, etc.) not found in gradle.properties. Release build will be unsigned or use debug signing."
            }
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release // <--- CHANGED FROM signingConfigs.debug
            
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    implementation 'androidx.work:work-runtime:2.7.1'

    // Correctly access hermesEnabled property here in dependencies block
    if (project.hasProperty('hermesEnabled') && project.hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}